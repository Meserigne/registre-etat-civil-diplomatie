#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ D√©marrage de la publication sur GitHub...');

// Configuration
const REPO_NAME = 'registre-etat-civil-diplomatie';
const GITHUB_USER = 'AwCoulibaly';
const REPO_URL = `https://github.com/${GITHUB_USER}/${REPO_NAME}.git`;

// Fonctions utilitaires
function runCommand(command, description) {
  console.log(`\nüìã ${description}...`);
  try {
    execSync(command, { stdio: 'inherit' });
    console.log(`‚úÖ ${description} r√©ussi`);
  } catch (error) {
    console.error(`‚ùå Erreur lors de ${description}:`, error.message);
    process.exit(1);
  }
}

function createFile(filePath, content) {
  console.log(`üìù Cr√©ation de ${filePath}...`);
  fs.writeFileSync(filePath, content);
  console.log(`‚úÖ ${filePath} cr√©√©`);
}

// V√©rifier que Git est install√©
try {
  execSync('git --version', { stdio: 'ignore' });
} catch (error) {
  console.error('‚ùå Git n\'est pas install√©. Veuillez installer Git d\'abord.');
  process.exit(1);
}

// √âtape 1: Build de l'application
console.log('\nüî® Build de l\'application...');
runCommand('npm run build', 'Build de l\'application');

// √âtape 2: Initialiser Git si pas d√©j√† fait
if (!fs.existsSync('.git')) {
  console.log('\nüìÅ Initialisation de Git...');
  runCommand('git init', 'Initialisation de Git');
  runCommand('git add .', 'Ajout des fichiers');
  runCommand('git commit -m "Initial commit - Registre √âtat Civil Diplomatie"', 'Premier commit');
}

// √âtape 3: Ajouter le remote GitHub
console.log('\nüîó Configuration du remote GitHub...');
try {
  execSync(`git remote add origin ${REPO_URL}`, { stdio: 'ignore' });
  console.log('‚úÖ Remote GitHub ajout√©');
} catch (error) {
  console.log('‚ÑπÔ∏è Remote GitHub d√©j√† configur√©');
}

// √âtape 4: Cr√©er le workflow GitHub Actions
const workflowDir = '.github/workflows';
if (!fs.existsSync(workflowDir)) {
  fs.mkdirSync(workflowDir, { recursive: true });
}

const workflowContent = `name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
`;

createFile('.github/workflows/deploy.yml', workflowContent);

// √âtape 5: Cr√©er un README diplomatique
const readmeContent = `# Registre d'√âtat Civil - Diplomatie Ivoirienne

## üá®üáÆ Application de Gestion du Registre d'√âtat Civil

Application web moderne pour la gestion compl√®te du registre d'√©tat civil dans le cadre diplomatique ivoirien.

### üöÄ Fonctionnalit√©s Principales

#### üìã Gestion des Dossiers
- Cr√©ation et suivi des dossiers d'√©tat civil
- Num√©rotation automatique des dossiers
- Statuts de traitement en temps r√©el
- Recherche et filtrage avanc√©s
- Export des donn√©es (CSV, JSON)

#### üë• Gestion des Agents
- Interface d√©di√©e pour les agents
- Assignation automatique et manuelle des dossiers
- Suivi des performances
- Gestion des disponibilit√©s

#### üìÑ Cr√©ation d'Actes Officiels
- G√©n√©ration d'actes de naissance, d√©c√®s, mariage
- Format PDF A4 conforme aux standards officiels
- Impression directe
- Templates diplomatiques

#### üîÑ Syst√®me de Dispatching
- Assignation intelligente des dossiers
- R√©partition automatique selon les charges
- Interface de r√©assignation
- Suivi des d√©lais de traitement

#### üë§ Gestion des Utilisateurs
- Syst√®me de r√¥les (Admin, Super Admin, Agent)
- Gestion s√©curis√©e des mots de passe
- Interface de cr√©ation de comptes
- Contr√¥le d'acc√®s granulaire

### üõ†Ô∏è Technologies Utilis√©es

- **Frontend**: React.js avec hooks modernes
- **Styling**: Tailwind CSS pour un design responsive
- **Icons**: Lucide React
- **PDF**: jsPDF et html2canvas
- **Stockage**: localStorage avec API JSON Server
- **D√©ploiement**: GitHub Pages avec Actions

### üìä Fonctionnalit√©s Avanc√©es

#### üìà Statistiques et Rapports
- Tableaux de bord en temps r√©el
- Graphiques de performance
- Rapports PDF automatis√©s
- M√©triques de productivit√©

#### üîí S√©curit√© et Sauvegarde
- Authentification s√©curis√©e
- Sauvegarde automatique des donn√©es
- Export/Import de donn√©es
- Synchronisation GitHub optionnelle

#### üåç Adaptation C√¥te d'Ivoire
- Informations consulares sp√©cifiques
- Formats officiels ivoiriens
- Terminologie diplomatique
- Donn√©es de test locales

### üöÄ D√©marrage Rapide

1. **Acc√®s √† l'application** : https://awcoulibaly.github.io/registre-etat-civil-diplomatie

2. **Connexion par d√©faut** :
   - Username: \`admin\`
   - Password: \`admin123\`

3. **Premiers pas** :
   - Cr√©er un nouveau dossier
   - Ajouter des agents
   - Tester la cr√©ation d'actes
   - Explorer le dispatching

### üì± Interface Responsive

L'application s'adapte parfaitement √† tous les √©crans :
- üíª Ordinateurs de bureau
- üì± Tablettes
- üì± Smartphones
- üñ•Ô∏è √âcrans tactiles

### üîß Configuration Technique

#### Pr√©requis
- Navigateur moderne (Chrome, Firefox, Safari, Edge)
- Connexion Internet pour le d√©ploiement
- Git pour les mises √† jour

#### Installation Locale
\`\`\`bash
git clone https://github.com/AwCoulibaly/registre-etat-civil-diplomatie.git
cd registre-etat-civil-diplomatie
npm install
npm start
\`\`\`

### üìû Support

Pour toute question ou probl√®me technique :
- üìß Email : Aw.coulibaly@diplomatie.gouv.ci
- üè¢ Service : Direction de la Diplomatie
- üìç Localisation : C√¥te d'Ivoire

### üìã Roadmap

#### ‚úÖ Fonctionnalit√©s Impl√©ment√©es
- [x] Gestion compl√®te des dossiers
- [x] Interface agent d√©di√©e
- [x] Cr√©ation d'actes PDF
- [x] Syst√®me de dispatching
- [x] Gestion des utilisateurs
- [x] Statistiques avanc√©es
- [x] Export/Import de donn√©es
- [x] Interface responsive

#### üîÑ Fonctionnalit√©s Futures
- [ ] Synchronisation cloud avanc√©e
- [ ] API REST compl√®te
- [ ] Notifications push
- [ ] Mode hors ligne
- [ ] Int√©gration biom√©trique
- [ ] Signature √©lectronique

### üìÑ Licence

Application d√©velopp√©e pour le Minist√®re des Affaires √âtrang√®res de C√¥te d'Ivoire.
Usage r√©serv√© aux services diplomatiques ivoiriens.

---

**D√©velopp√© avec ‚ù§Ô∏è pour la Diplomatie Ivoirienne**

*Version 1.0 - 2024*
`;

createFile('README.md', readmeContent);

// √âtape 6: Commiter et pousser
console.log('\nüì§ Envoi vers GitHub...');
runCommand('git add .', 'Ajout des nouveaux fichiers');
runCommand('git commit -m "feat: Publication automatique - Registre √âtat Civil Diplomatie"', 'Commit des changements');

// Essayer de pousser sur main, sinon cr√©er la branche
try {
  runCommand('git push -u origin main', 'Push sur la branche main');
} catch (error) {
  console.log('üîÑ Cr√©ation de la branche main...');
  runCommand('git branch -M main', 'Renommage en main');
  runCommand('git push -u origin main', 'Push sur main');
}

// √âtape 7: Instructions finales
console.log('\nüéâ Publication termin√©e avec succ√®s !');
console.log('\nüìã Prochaines √©tapes :');
console.log('1. Allez sur https://github.com/AwCoulibaly/registre-etat-civil-diplomatie');
console.log('2. V√©rifiez que le code est bien pouss√©');
console.log('3. Allez dans Settings > Pages');
console.log('4. Activez GitHub Pages sur la branche main');
console.log('5. Votre application sera disponible sur :');
console.log('   https://awcoulibaly.github.io/registre-etat-civil-diplomatie');
console.log('\n‚è±Ô∏è Le d√©ploiement prendra quelques minutes...');
console.log('\nüîë Connexion par d√©faut :');
console.log('   Username: admin');
console.log('   Password: admin123'); 