#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');

console.log('üöÄ Red√©ploiement √† z√©ro sur GitHub...\n');

// Configuration
const GITHUB_USERNAME = 'meserigne';
const REPOSITORY_NAME = 'registre-etat-civil-diplomatie';
const REPOSITORY_URL = `https://github.com/${GITHUB_USERNAME}/${REPOSITORY_NAME}.git`;

console.log('üìã √âtapes du red√©ploiement √† z√©ro :\n');

console.log('1Ô∏è‚É£  Nettoyage complet du repository...');
console.log('2Ô∏è‚É£  Suppression de l\'historique Git...');
console.log('3Ô∏è‚É£  Cr√©ation d\'un nouveau repository propre...');
console.log('4Ô∏è‚É£  D√©ploiement de l\'application mise √† jour...\n');

try {
  // 1. Sauvegarder les fichiers importants
  console.log('üíæ Sauvegarde des fichiers importants...');
  if (fs.existsSync('db.json')) {
    fs.copyFileSync('db.json', 'db_backup.json');
    console.log('‚úÖ Base de donn√©es sauvegard√©e');
  }

  // 2. Supprimer le repository Git local
  console.log('üóëÔ∏è  Suppression du repository Git local...');
  if (fs.existsSync('.git')) {
    execSync('rm -rf .git', { stdio: 'inherit' });
    console.log('‚úÖ Repository Git local supprim√©');
  }

  // 3. Initialiser un nouveau repository Git
  console.log('üìÅ Initialisation d\'un nouveau repository Git...');
  execSync('git init', { stdio: 'inherit' });
  console.log('‚úÖ Nouveau repository Git initialis√©');

  // 4. Configurer Git
  console.log('‚öôÔ∏è  Configuration de Git...');
  execSync('git config user.name "Meserigne"', { stdio: 'inherit' });
  execSync('git config user.email "meserigne@example.com"', { stdio: 'inherit' });
  console.log('‚úÖ Git configur√©');

  // 5. Ajouter le remote
  console.log('üîó Configuration du remote GitHub...');
  execSync(`git remote add origin ${REPOSITORY_URL}`, { stdio: 'inherit' });
  console.log('‚úÖ Remote configur√©');

  // 6. Ajouter tous les fichiers
  console.log('üì¶ Ajout des fichiers...');
  execSync('git add .', { stdio: 'inherit' });
  console.log('‚úÖ Fichiers ajout√©s');

  // 7. Premier commit
  console.log('üíæ Premier commit...');
  execSync('git commit -m "Initial commit: Application Registre √âtat Civil Diplomatie - Red√©ploiement √† z√©ro"', { stdio: 'inherit' });
  console.log('‚úÖ Commit cr√©√©');

  // 8. Forcer le push (√©craser l'historique)
  console.log('üöÄ Push forc√© vers GitHub...');
  execSync('git push -f origin main', { stdio: 'inherit' });
  console.log('‚úÖ Push forc√© r√©ussi');

  // 9. Cr√©er la branche gh-pages
  console.log('üåê Cr√©ation de la branche gh-pages...');
  execSync('git checkout -b gh-pages', { stdio: 'inherit' });
  execSync('git push -f origin gh-pages', { stdio: 'inherit' });
  console.log('‚úÖ Branche gh-pages cr√©√©e');

  // 10. Revenir √† la branche main
  execSync('git checkout main', { stdio: 'inherit' });

  console.log('\nüéâ Red√©ploiement √† z√©ro termin√© avec succ√®s !');
  console.log(`üì± Votre application sera disponible √† : https://${GITHUB_USERNAME}.github.io/${REPOSITORY_NAME}`);
  console.log('‚è∞ Attendez 5-10 minutes pour le premier d√©ploiement.');

  // 11. Instructions pour activer GitHub Pages
  console.log('\nüìã Prochaines √©tapes :');
  console.log(`1. Allez sur : ${REPOSITORY_URL}`);
  console.log('2. Cliquez sur "Settings"');
  console.log('3. Dans le menu de gauche, cliquez sur "Pages"');
  console.log('4. Dans "Source", s√©lectionnez "Deploy from a branch"');
  console.log('5. Dans "Branch", s√©lectionnez "gh-pages" et "/ (root)"');
  console.log('6. Cliquez sur "Save"');

  // 12. Restaurer la base de donn√©es si n√©cessaire
  if (fs.existsSync('db_backup.json')) {
    fs.copyFileSync('db_backup.json', 'db.json');
    console.log('‚úÖ Base de donn√©es restaur√©e');
  }

} catch (error) {
  console.error('\n‚ùå Erreur lors du red√©ploiement :', error.message);
  console.log('\nüîß Solutions possibles :');
  console.log('1. V√©rifiez que vous √™tes connect√© √† GitHub : gh auth status');
  console.log('2. V√©rifiez que le repository existe sur GitHub');
  console.log('3. V√©rifiez vos permissions sur le repository');
  console.log('4. Essayez de supprimer et recr√©er le repository sur GitHub');
}

console.log('\nüìû Si vous avez des probl√®mes :');
console.log('1. V√©rifiez l\'authentification GitHub : gh auth status');
console.log('2. V√©rifiez que le repository est PUBLIC');
console.log('3. V√©rifiez que GitHub Pages est activ√©');
console.log('4. Attendez quelques minutes pour le premier d√©ploiement'); 